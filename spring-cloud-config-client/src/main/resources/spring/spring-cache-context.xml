<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd"
       default-lazy-init="true">

 <!-- 
	<bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
            	
            	     <value>classpath:redis-dev.properties</value>
            	             
            	     <value>http://127.0.0.1:8080/redis-dev.properties</value>
            </list>
        </property>
    </bean>
 -->

    <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="timeout" value="10000"/>
        <property name="poolConfig">
            <bean class="redis.clients.jedis.JedisPoolConfig">
                <property name="maxIdle" value="${redis.pool.maxIdle}"/>
                <property name="maxTotal" value="${redis.pool.maxTotal}"/>
                <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
                <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
                <property name="testOnReturn" value="${redis.pool.testOnReturn}" />
            </bean>
        </property>
        <property name="usePool" value="true"/>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="enableTransactionSupport" value="false"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
    </bean>

    <bean id="redisTemplateTrans" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="enableTransactionSupport" value="true"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
    </bean>

	<bean id="personRepo" class="com.redhat.sample.config.redis.PersonRepoImpl">
		<property name ="redisTemplate" ref="redisTemplate"/>
	</bean>
    
    <redis:collection id="non-existing"/>
    <redis:collection id="props" key="prop-key" type="PROPERTIES"/>
    <redis:collection id="map" key="map-key" type="MAP"/>

</beans>
